# Stage 1: Create the EF migration script
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build-env
WORKDIR /src

# Define build arguments
ARG DatabaseConnectionString

# Set environment variable during the build process
ENV DatabaseConnectionString=${DatabaseConnectionString}
ENV EVENT_GRID_TOPIC_URL=${EVENT_GRID_TOPIC_URL}
ENV EVENT_GRID_TOPIC_KEY=${EVENT_GRID_TOPIC_KEY}

# Copy csproj files first (for layer caching)
COPY ./src/ServiceLayer.API/ServiceLayer.API.csproj ./ServiceLayer.API/

# Restore dependencies
RUN dotnet restore ./ServiceLayer.API/ServiceLayer.API.csproj

# Copy source files
COPY ./src/ServiceLayer.API/ ./ServiceLayer.API/

# Install dotnet-ef to a local tools directory
RUN dotnet tool install dotnet-ef --tool-path /tools

# Configure environment variables
ENV PATH="/tools:$PATH" \
    DOTNET_CLI_HOME=/tmp \
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE=true \
    DOTNET_NOLOGO=true

# Build the project
RUN dotnet build ./ServiceLayer.API/ServiceLayer.API.csproj

# Generate the SQL migration script
RUN dotnet ef migrations script -o /migrations/migration.sql --project ./ServiceLayer.API/

# Stage 2: Run migrations and seed data
FROM mcr.microsoft.com/mssql-tools:latest AS migration-env

# Copy the generated migration SQL script from the build stage
COPY --from=build-env /migrations/migration.sql /scripts/migration.sql
COPY ./database/ /database/

# Create non-root user
RUN addgroup --system appgroup && \
    adduser --system --ingroup appgroup appuser

# Make sure the script is executable and in the right location
RUN chmod +x /database/migrate-and-seed.sh

# Run as non-root user
USER appuser

# Run EF migrations and seed data (fix the path)
ENTRYPOINT ["/database/migrate-and-seed.sh"]
